# General variables related to the enb project itself, passed to the setup() method.
[enb]
name = enb
description = Experiment notebook (%(name)s): efficient and reproducible science.
version = 0.3.6
url = https://github.com/miguelinux314/experiment-notebook
download_url = https://github.com/miguelinux314/experiment-notebook/archive/v%(version)s.tar.gz
license = MIT License
author = Miguel Hernandez Cabronero, et al.
author_email = miguel.hernandez@uab.cat
platforms = any
python_requires = >=3.6
development_status = 4 - Beta
commit_hash = 653bd08


# Default CLI values, propagated to enb.config.options unless the parameter is specified.
# Please refer to enb/config/aoptions.py or run an enb-importing script with -h for additional help
# on these values.
[enb.config.options]
# General options
; Be verbose? It effectively lowers the priority threshold needed to print a message.
verbose = 0
; Additional .ini paths to be considered during enb's startup.
extra_ini_paths = []

# Execution options
force = 0
quick = 0
repetitions = 1
selected_columns = None
no_new_results = False
chunk_size = None
force_sanity_checks = False
progress_report_period = 1

# Ray options
no_ray = False
cpu_limit = None
disable_swap = False
worker_script_name = default_worker.py
preshutdown_wait_seconds = 0.5
ray_port = 11000
ray_port_count = 500
ssh_cluster_csv_path = None
no_remote_mount_needed = False

# Data dir options
## Automatic path setting is available for these key folders when set to None,
## but can be overwritten with any desired directory.
base_dataset_dir = None
persistence_dir = None
base_version_dataset_dir = None
base_tmp_dir = None
plot_dir = None
analysis_dir = None
## These paths are None, but can be overwritten to activate certain features.
reconstructed_dir = None
external_bin_base_dir = None
project_root = None

# Rendering options
no_render = False
fig_width = 5.0
fig_height = 4.0
; Relative horizontal and vertical margin added to plottable data in figures
horizontal_margin = 0
vertical_margin = 0
show_grid = False
show_subgrid = False
legend_column_count = 2
global_title = None
group_row_margin = 0.3

# Logging options
; messages beyond this level are not shown by default. To choose from (in order of priority)
; always, error, warning, message, verbose, informative, debug
selected_log_level = message
; Selects the default log level equivalent to a regular print-like message.
default_print_level = message
; If True, the print command is replaced by a wrapper that logs with default_print_level priority
log_print = True
; If True, messages are preceded by a prefix given by its priority level.
log_level_prefix = True
; Minimum selected log level required to show messages' prefixes
show_prefix_level = info

# Managed attribute classes, e.g., plotting parameters. See the classes' documentation for more information
# on each field.

# Base class for all analyzers
[enb.aanalysis.Analyzer]
# List of allowed rendering modes for the analyzer
valid_render_modes = set()
# Selected render modes (by default, all of them)
selected_render_modes = %(valid_render_modes)s
# Main title to be displayed
plot_title = None
# Show the number of elements in each group?
show_count = True
# Show a group containing all elements?
show_global = False
# If a reference group is used as baseline, should it be shown in the analysis itself?
show_reference_group = True
# If applicable, show a horizontal +/- 1 standard deviation bar centered on the average
show_x_std = False
# If applicable, show a vertical +/- 1 standard deviation bar centered on the average
show_y_std = False
# Main marker size
main_marker_size = 4
# Secondary (e.g., individual data) marker size
secondary_marker_size = 2
# Main plot element alpha
main_alpha = 0.5
# Secondary plot element alpha (often overlaps with data using main_alpha)
secondary_alpha = 0.3
# If a semilog y axis is used, y_min will be at least this large to avoid math domain errors
semilog_y_min_bound = 1e-5
# Thickness of the main plot lines
main_line_width = 2
# Thickness of secondary plot lines
secondary_line_width = 1
# Margin between group rows (if there is more than one)
group_row_margin = 0.2
# If more than one group is displayed, when applicable, adjust plots to use the same scale in every subplot?
common_group_scale = True
# If more than one group is present, they are shown in the same subplot
# instead of in different rows
combine_groups = False
# If True, display group legends when applicable
show_legend = True
# If not None, it must be a list of matplotlibrc styles (names or file paths) 
style_list = None
# Number of decimals used when showing decimal values in latex
latex_decimal_count = 3

# Analyzer for scalar, numeric values
[enb.aanalysis.ScalarNumericAnalyzer]
; Parameters common to all analyzers
valid_render_modes = {"histogram", "hbar", "boxplot"}
selected_render_modes = %(valid_render_modes)s
show_x_std = True
show_global = False
; Parameters specific to this analyzer
histogram_bin_count = 50
bar_width_fraction = 1
sort_by_average = False
show_individual_samples = False

# Analyzer for dictionaries containing scalar, numeric values
[enb.aanalysis.TwoNumericAnalyzer]
; Parameters common to all analyzers
valid_render_modes = {"scatter", "line"}
selected_render_modes = %(valid_render_modes)s
show_x_std = True
show_y_std = True
combine_groups = True
show_global = False
show_count = False
; Parameters specific to this analyzer
show_individual_samples = True
average_identical_x = False

# Analyzer for columns containing dicts with scalar numeric values
[enb.aanalysis.DictNumericAnalyzer]
; Parameters common to all analyzers
valid_render_modes = {"line"}
selected_render_modes = %(valid_render_modes)s
show_y_std = True
; Parameters specific to this analyzer
show_individual_samples = True

# Analyze 2D given the x and y coordinates in two separate columns
[enb.aanalysis.ScalarNumeric2DAnalyzer]
valid_render_modes = {"colormap"}
selected_render_modes = %(valid_render_modes)s
bin_count = 50
; Format used when representing the x position ticks
x_tick_format_str = "{:.2f}"
; Format used when representing the y position ticks
y_tick_format_str = "{:.2f}"
; Matplotlib colormap name to be used if the 'colormap' mode is selected
color_map = "inferno"
; Color displayed when no data are found in a given 2d bin
no_data_color = (1,1,1,0)
; Color displayed in case any invalid (NaN) values are obtained in any 2d bin
bad_data_color = "magenta"

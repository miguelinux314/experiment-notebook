# General variables related to the enb project itself, passed to the setup() method.
[enb]
name = enb
description = Experiment NoteBook (%(name)s): efficient and reproducible science.
version = 1.0.5
url = https://github.com/miguelinux314/experiment-notebook
download_url = https://github.com/miguelinux314/experiment-notebook/archive/v%(version)s.tar.gz
license = MIT License
author = Miguel HernÃ¡ndez Cabronero, et al.
author_email = miguel.hernandez@uab.cat
platforms = any
python_requires = >=3.7
development_status = 5 - Production/Stable


# Default CLI values, propagated to enb.config.options unless the parameter is specified.
# Please refer to enb/config/aoptions.py or run an enb-importing script with -h for additional help
# on these values.
[enb.config.options]
# General options
; Be verbose? It effectively lowers the priority threshold needed to print a message.
verbose = 0
; Additional .ini paths to be considered during enb's startup.
extra_ini_paths = []

# Execution options
force = 0
quick = 0
repetitions = 1
selected_columns = None
no_new_results = False
chunk_size = None
force_sanity_checks = False
progress_report_period = 1
disable_progress_bar = False
report_wall_time = False

# Ray options
ssh_cluster_csv_path = None
cpu_limit = None
disable_swap = False
worker_script_name = default_worker.py
preshutdown_wait_seconds = 0.5
ray_port = 11000
ray_port_count = 500
no_remote_mount_needed = False

# Data dir options
## Automatic path setting is available for these key folders when set to None,
## but can be overwritten with any desired directory.
base_dataset_dir = None
persistence_dir = None
base_version_dataset_dir = None
base_tmp_dir = None
plot_dir = None
analysis_dir = None
## These paths are None, but can be overwritten to activate certain features.
reconstructed_dir = None
external_bin_base_dir = None
project_root = None

# Logging options
; messages beyond this level are not shown by default. To choose from (in order of priority)
; always, error, warning, message, verbose, informative, debug
selected_log_level = message
; Selects the default log level equivalent to a regular print-like message.
default_print_level = message
; If True, messages are preceded by a prefix given by its priority level.
log_level_prefix = True
; Minimum selected log level required to show messages' prefixes
show_prefix_level = info

# Managed attribute classes, e.g., plotting parameters. See the classes' documentation for more information
# on each field.

# Base class for all analyzers - plot aspect can be heavily configured with these options
[enb.aanalysis.Analyzer]
# List of allowed rendering modes for the analyzer
valid_render_modes = set()
# Selected render modes (by default, all of them)
selected_render_modes = %(valid_render_modes)s
# If more than one group is present, they are shown in the same subplot
# instead of in different rows
combine_groups = False

# If not None, it must be a list of matplotlibrc styles (names or file paths)
style_list = None
# Default figure width
fig_width = 5.0
# Default figure height
fig_height = 4.0
# Relative horizontal margin added to plottable data in figures, e.g. 0.1 for a 10% margin
horizontal_margin = 0
# Relative vertical margin added to plottable data in figures, e.g. 0.1 for a 10% margin
vertical_margin = 0
# Margin between group rows (None to use matplotlib's default)
group_row_margin = None
# Padding between the global y label and the y axis (when present)
global_y_label_margin = 15

# Show grid lines at the major ticks?
show_grid = False
# Show grid lines at the minor ticks?
show_subgrid = False
# Transparency (between 0 and 1) of the main grid, if shown
grid_alpha = 0.6
# Transparency (between 0 and 1) of the subgrid, if shown
subgrid_alpha = 0.4
# Tick mark direction ("in", "out" or "inout")
tick_direction = "in"

# If applicable, show a horizontal +/- 1 standard deviation bar centered on the average
show_x_std = False
# If applicable, show a vertical +/- 1 standard deviation bar centered on the average
show_y_std = False
# If True, display group legends when applicable
show_legend = True
# Default number of columns inside the legend
legend_column_count = 2
# Legend position (if configured to be shown). It can be "title" to show it above the plot,
# or any matplotlib-recognized argument for the loc parameter of legend()
legend_position = "title"
# If more than one group is displayed, when applicable, adjust plots to use the same scale in every subplot?
common_group_scale = True

# Main title to be displayed
plot_title = None
# Y position of the main title, if not None. If None, an attempt is automatically made
# to avoid overlapping with the axes and legend
title_y = None
# Show the number of elements in each group?
show_count = True
# Show a group containing all elements?
show_global = False
# Name of the global group
global_group_name = "All"
# If a reference group is used as baseline, should it be shown in the analysis itself?
show_reference_group = True

# Main marker size
main_marker_size = 4
# Secondary (e.g., individual data) marker size
secondary_marker_size = 2
# Thickness of secondary plot lines
secondary_line_width = 1
# Main plot element alpha
main_alpha = 0.5
# Thickness of the main plot lines
main_line_width = 2
# Secondary plot element alpha (often overlaps with data using main_alpha)
secondary_alpha = 0.3
# If a semilog y axis is used, y_min will be at least this large to avoid math domain errors
semilog_y_min_bound = 1e-5

# Number of decimals used when showing decimal values in latex
latex_decimal_count = 3

# Analyzer for individual columns containing scalar, numeric values
[enb.aanalysis.ScalarNumericAnalyzer]
; Parameters common to all analyzers
valid_render_modes = {"histogram", "hbar", "boxplot"}
selected_render_modes = %(valid_render_modes)s
show_x_std = True
show_global = False
; Parameters specific to this analyzer
histogram_bin_count = 50
bar_width_fraction = 1
sort_by_average = False
show_individual_samples = False

# Analyzer for pairs of columns containing scalar, numeric values
[enb.aanalysis.TwoNumericAnalyzer]
; Parameters common to all analyzers
valid_render_modes = {"scatter", "line"}
selected_render_modes = %(valid_render_modes)s
show_x_std = True
show_y_std = True
combine_groups = True
show_global = False
show_count = False
; Parameters specific to this analyzer
show_individual_samples = True
average_identical_x = False
show_linear_regression = False

# Analyzer for columns containing dicts with scalar numeric values
[enb.aanalysis.DictNumericAnalyzer]
; Parameters common to all analyzers
valid_render_modes = {"line"}
selected_render_modes = %(valid_render_modes)s
show_y_std = True
; Parameters specific to this analyzer
show_individual_samples = True

# Analyze 2D given the x and y coordinates in two separate columns
[enb.aanalysis.ScalarNumeric2DAnalyzer]
valid_render_modes = {"colormap"}
selected_render_modes = %(valid_render_modes)s
bin_count = 50
; Format used when representing the x position ticks
x_tick_format_str = "{:.2f}"
; Format used when representing the y position ticks
y_tick_format_str = "{:.2f}"
; Matplotlib colormap name to be used if the 'colormap' mode is selected
color_map = "inferno"
; Color displayed when no data are found in a given 2d bin
no_data_color = (1,1,1,0)
; Color displayed in case any invalid (NaN) values are obtained in any 2d bin
bad_data_color = "magenta"

[enb.aanalysis.ScalarNumericJointAnalyzer]
valid_render_modes = {"table"}
selected_render_modes = %(valid_render_modes)s
# Show the global "All" row
show_global_row = False
# Show the global "All" column
show_global_column = False
# Show the reference group when one is selected?
show_reference_group = False
# Optionally highlight the best results in each row. Must be one of "low", "high" or None
highlight_best_column = None
# Optionally highlight the best results in each column. Must be one of "low", "high" or None
highlight_best_row = None
# Number format used for displaying cell data
number_format = "{:.3f}"
# Alignment ("left", "center", "right") of the data cells
cell_alignment = "center"
# Alignment ("left", "center", "right") of the column headers
col_header_alignment = "center"
# Alignment ("left", "center", "right") of the row headers
row_header_alignment = "left"
# Table width. Set to None to attempt automatic sizing.
fig_width = None
# Table height. Set to None to attempt automatic sizing.
fig_height = None
# "edges" parameter passed to plt.table
# (substring of 'BRTL' or {'open', 'closed', 'horizontal', 'vertical'})
edges = "closed"

[enb.log.Logger]
# Default style for core level messages
style_core = "#28c9ff"
# Default style for error level messages
style_error = "bold #ff5255"
# Default style for warning level messages
style_warn = "#ffca4f"
# Default style for message level messages
style_message = "#28c9ff"
# Default style for verbose level messages
style_verbose = "#a5d3a5"
# Default style for info level messages
style_info = "#9b5ccb"
# Default style for debug level messages
style_debug = "#909090"
# Style for the banner line
banner_line_style = "#767676 bold"
# Style for the regular text in the banner
banner_plain_text_style = "#767676"
# Style for the 'enb' part in the banner
banner_enb_name_style = "#f3ac05 bold"
# Style for the version part in the banner
banner_enb_version_style = "#9b5ccb bold"

[enb.progress.ProgressTracker]
# Style for the panel border surrounding each progress track
style_border = "#adadad bold"

# Style for the completed portion of the progress bar while it's being filled
style_bar_complete = "#9b5ccb bold"
# Style for the incomplete portion of the progress bar
style_bar_incomplete = "#252525"
# Style for the bar once the task is finished
style_bar_finished = "#f3ac05"

# Style for the panel title when the instance being tracked is an enb.sets.FilePropertiesTable subclass
style_title_dataset = "#45e193"
# Style for the panel title when the instance being tracked is an enb.experiment.Experiment subclass
style_title_experiment = "#13bf00"
# Style for the panel title when the instance being tracked is an enb.aanalysis.Analyzer subclass
style_title_analyzer = "#1990ff"
# Style for the panel title when the instance being tracked is an enb.aanalysis.AnalyzerSummary subclass
style_title_summary = "#23cfff"
# Style for the panel title when the instance being tracked is any other type of enb.atable.ATable instance
style_title_atable = "#9b59ff"
# Style for the panel title when the instance being tracked is not an enb.atable.ATable subclass
style_title_other = "#cdabff"

# Style for the text labels (e.g., "Rows", "Chunks")
style_text_label = "#787878"
# Style for the text separators (e.g., ":", "/")
style_text_separator = "#505050"
# Style for the text indicating units or scale (e.g., "s", "%")
style_text_unit = "#707070"
# Style for the text displaying the number of completed elements
style_text_completed = "#bcbcbc bold"
# Style for the text displaying the total number of elements
style_text_total = "#bcbcbc"
# Style for the text displaying speed
style_text_speed = "#bcbcbc"
# Style for the text displaying completion percentage
style_text_percentage = "#bcbcbc"
# Style for text displaying time values (not units)
style_text_time = "#bcbcbc"

# Style for the spinner
style_spinner = "#9b5ccb bold"
